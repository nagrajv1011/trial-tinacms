import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import client from "@/tina/__generated__/client";
import Navbar from "@/components/Navbar";
import Footer from "@/components/Footer";
import { BreadcrumbResponsive } from "@/components/Breadcrumbs";
import { Separator } from "@/components/ui/separator";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default async function RootLayout({
//   children,
// }: {
//   children: React.ReactNode;
// }) {
//   const res = await client.queries.menu({ relativePath: "navbar.md" });

//   // console.log(res, "laoyut");

//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
//         <Navbar
//           data={JSON.parse(JSON.stringify(res?.data?.menu))}
//           query={res.query}
//           variables={res.variables}
//         />
//         <div className="min-h-screen bg-gray-100 px-4 py-4 sm:px-6 sm:py-6 md:px-8 md:py-8">
//           <div className="w-full h-full bg-white rounded-xl shadow-lg p-4 sm:p-6 md:p-8 overflow-auto">
//             <BreadcrumbResponsive />
//             <Separator className="mt-2"/>
//             {children}
//           </div>
//         </div>
//         {/* {children} */}
//         <Footer />
//       </body>
//     </html>
//   );
// }


// import "./globals.css";
import { Inter } from "next/font/google";

const inter = Inter({ subsets: ["latin"] });

export const metadata = {
  title: "Self Hosted Tina App",
  description: "A Next.js app with TinaCMS",
};


export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const res = await client.queries.menu({ relativePath: "navbar.md" });
  return (
    <html lang="en">
      <body className={inter.className}>
        {/* {children} */}
        <Navbar
          data={JSON.parse(JSON.stringify(res?.data?.menu))}
          query={res.query}
          variables={res.variables}
        />
        <div className="min-h-screen bg-gray-100 px-4 py-4 sm:px-6 sm:py-6 md:px-8 md:py-8">
          <div className="w-full h-full bg-white rounded-xl shadow-lg p-4 sm:p-6 md:p-8 overflow-auto">
            <BreadcrumbResponsive />
            <Separator className="mt-2" />
            {children}
          </div>
        </div>
        {/* {children} */}
        <Footer />
      </body>
    </html>
  );
}
